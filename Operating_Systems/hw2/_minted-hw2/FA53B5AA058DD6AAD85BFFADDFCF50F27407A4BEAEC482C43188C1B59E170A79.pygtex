\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+ch}{\PYGZsh{}!/usr/bin/env bash}

\PYG{c+c1}{\PYGZsh{} this function is a little hard to explain, but essentially}
\PYG{c+c1}{\PYGZsh{} the \PYGZgt{}\PYGZgt{} operator appends the tainted state to standard out}
\PYG{c+c1}{\PYGZsh{} but the number gets bit shifted before hand, resulting in the}
\PYG{c+c1}{\PYGZsh{} output of the binary digit specified by \PYGZdl{}1}
\PYG{k}{function} tainted\PYGZus{}state\PYG{o}{()\PYGZob{}}
    \PYG{n+nb}{echo} \PYG{k}{\PYGZdl{}((\PYGZdl{}(}cat /proc/sys/kernel/tainted\PYG{k}{)}\PYGZgt{}\PYGZgt{}\PYG{o}{(}\PYG{n+nv}{\PYGZdl{}1}\PYG{o}{)\PYGZam{}}\PYG{l+m}{1}\PYG{k}{))}
\PYG{o}{\PYGZcb{}}

\PYG{c+c1}{\PYGZsh{} This is what each bit means if it has the value of 1}
\PYG{c+c1}{\PYGZsh{} I used the table from: https://docs.kernel.org/admin\PYGZhy{}guide/tainted\PYGZhy{}kernels.html\PYGZsh{}more\PYGZhy{}detailed\PYGZhy{}explanation\PYGZhy{}for\PYGZhy{}tainting}
\PYG{c+c1}{\PYGZsh{} as reference}
\PYG{n+nv}{problems}\PYG{o}{=(} \PYG{l+s+s2}{\PYGZdq{}G/P: proprietary module was loaded\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}F: module was force loaded\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}S: kernel running on an out of specification system\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}R: module was force unloaded\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}M: processor reported a Machine Check Exception (MCE)\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}B: bad page referenced or some unexpected page flags\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}U: taint requested by userspace application\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}D: kernel died recently, i.e. there was an OOPS or BUG\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}A: ACPI table overridden by user\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}W: kernel issued warning\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}C: staging driver was loaded\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}I: workaround for bug in platform firmware applied\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}O: externally\PYGZhy{}built (out\PYGZhy{}of\PYGZhy{}tree) module was loaded\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}E: unsigned module was loaded\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}L: soft lockup occurred\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}K: kernel has been live patched\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}X: Auxiliary taint, defined for and used by distros\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}T: kernel was built with the struct randomization plugin\PYGZdq{}}
           \PYG{l+s+s2}{\PYGZdq{}N: an in\PYGZhy{}kernel test has been run\PYGZdq{}}
         \PYG{o}{)}

\PYG{c+c1}{\PYGZsh{} there are 19 bits 0\PYGZhy{}18. If the bit is 1, the corresponding error is outputted.}
\PYG{k}{for} i \PYG{k}{in} \PYG{o}{\PYGZob{}}\PYG{l+m}{0}..18\PYG{o}{\PYGZcb{}}
\PYG{k}{do}
    \PYG{k}{if} \PYG{o}{[[} \PYG{k}{\PYGZdl{}(}tainted\PYGZus{}state \PYG{n+nv}{\PYGZdl{}i}\PYG{k}{)} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}1\PYGZdq{}} \PYG{o}{]]}\PYG{p}{;} \PYG{k}{then}
        \PYG{n+nb}{echo} \PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nv}{problems}\PYG{p}{[}\PYG{n+nv}{\PYGZdl{}i}\PYG{p}{]}\PYG{l+s+si}{\PYGZcb{}}
    \PYG{k}{fi}
\PYG{k}{done}
\end{Verbatim}
